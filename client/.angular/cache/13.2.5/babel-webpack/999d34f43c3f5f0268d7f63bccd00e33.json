{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/countries.service\";\nimport * as i3 from \"../../../services/manage-data.service\";\nimport * as i4 from \"../../../services/alerts.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/select\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction ManageProvidersComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field Name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field Phone Number is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field Country is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field State is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_47_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const city_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r9, \" \");\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_47_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field City is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 3)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Select City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 17)(4, \"mat-option\");\n    i0.ɵɵtext(5, \"--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ManageProvidersComponent_mat_form_field_47_mat_option_6_Template, 2, 2, \"mat-option\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ManageProvidersComponent_mat_form_field_47_mat_error_7_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.cities);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.providerForm.controls[\"city\"].invalid);\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_48_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field City is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 3)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Enter a City\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 20);\n    i0.ɵɵtemplate(4, ManageProvidersComponent_mat_form_field_48_mat_error_4_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.providerForm.controls[\"city\"].invalid);\n  }\n}\n\nexport let ManageProvidersComponent = /*#__PURE__*/(() => {\n  class ManageProvidersComponent {\n    constructor(formBuilder, _countriesService, _manageDataService, _alertsService, activatedRoute, router) {\n      this.formBuilder = formBuilder;\n      this._countriesService = _countriesService;\n      this._manageDataService = _manageDataService;\n      this._alertsService = _alertsService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.countries = [];\n      this.states = [];\n      this.cities = [];\n      this.edit = false;\n      this.checkValue = true;\n      this.createForm();\n    }\n\n    ngOnInit() {\n      this.getCountries();\n      this.provider = this.activatedRoute.snapshot.params;\n\n      if (this.provider.id) {\n        this.edit = true;\n        this.loadForm();\n      }\n    }\n\n    createForm() {\n      this.providerForm = this.formBuilder.group({\n        name: new FormControl('', Validators.compose([Validators.required])),\n        lastName: new FormControl(''),\n        email: new FormControl('', Validators.compose([Validators.required])),\n        phone: new FormControl('', Validators.compose([Validators.required])),\n        country: new FormControl('', Validators.compose([Validators.required])),\n        state: new FormControl('', Validators.compose([Validators.required])),\n        city: new FormControl('', Validators.compose([Validators.required]))\n      });\n    }\n\n    loadForm() {\n      this.providerForm.reset({\n        name: this.provider.name,\n        lastName: this.provider.lastName || '',\n        email: this.provider.email,\n        phone: this.provider.phone,\n        country: this.provider.country,\n        state: this.provider.state,\n        city: this.provider.city\n      });\n    }\n\n    getCountries() {\n      this._countriesService.allCountries().subscribe(res => {\n        this.countries = res.Countries;\n      }, err => console.log(err));\n    }\n\n    setStates(i) {\n      this.states = this.countries[i].States;\n      this.cities = this.states[0].Cities;\n    }\n\n    setCities(i) {\n      this.cities = this.states[i].Cities;\n    }\n\n    onSubmit(values) {\n      if (this.providerForm.invalid) {\n        Object.values(this.providerForm.controls).forEach(control => {\n          if (control instanceof FormGroup) {\n            Object.values(control.controls).forEach(control => control.markAsTouched());\n          } else {\n            control.markAsTouched();\n          }\n        });\n        return;\n      }\n\n      if (!this.edit) {\n        this.addProvider(values);\n      } else {\n        this.updateProvider(values);\n      }\n    }\n\n    addProvider(values) {\n      this._manageDataService.createRecord('providers', values).subscribe(res => {\n        if (res.success) {\n          this._alertsService.alertToast(res.msg, 'success').then(() => {\n            this.providerForm.reset();\n          });\n        }\n      }, err => {\n        let errorMsg = '';\n\n        if (err.error.msg) {\n          errorMsg = err.error.msg;\n        } else {\n          errorMsg = 'Something went wrong';\n        }\n\n        this._alertsService.alertToast(errorMsg, 'error');\n      });\n    }\n\n    updateProvider(values) {\n      this._manageDataService.updateRecord('providers', this.provider.id, values).subscribe(res => {\n        this._alertsService.alertToast('Provider updated successfully', 'success').then(() => {\n          this.router.navigateByUrl('providers/list-providers');\n          this.providerForm.reset();\n          this.edit = false;\n        });\n      }, err => {\n        let errorMsg = '';\n\n        if (err.error.msg) {\n          errorMsg = err.error.msg;\n        } else {\n          errorMsg = 'Something went wrong';\n        }\n\n        this._alertsService.alertToast(errorMsg, 'error');\n      });\n    }\n\n  }\n\n  ManageProvidersComponent.ɵfac = function ManageProvidersComponent_Factory(t) {\n    return new (t || ManageProvidersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CountriesService), i0.ɵɵdirectiveInject(i3.ManageDataService), i0.ɵɵdirectiveInject(i4.AlertsService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n  };\n\n  ManageProvidersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageProvidersComponent,\n    selectors: [[\"app-manage-providers\"]],\n    decls: 51,\n    vars: 9,\n    consts: [[1, \"mat-elevation-z8\", \"form\", 3, \"formGroup\"], [1, \"text-divider\"], [1, \"row-form\"], [\"appearance\", \"outline\", 1, \"row-input\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Name\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"placeholder\", \"Last Name\"], [1, \"lastname\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"placeholder\", \"client@email.com\"], [\"matInput\", \"\", \"formControlName\", \"phone\", \"placeholder\", \"Enter phone number\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"formControlName\", \"country\", \"placeholder\", \"Enter a City\"], [\"matInput\", \"\", \"formControlName\", \"state\", \"placeholder\", \"Enter a City\"], [1, \"cityField\"], [\"appearance\", \"outline\", \"class\", \"row-input\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"type\", \"button\", \"color\", \"primary\", 1, \"btn-submit\", \"full-width\", 3, \"click\"], [\"formControlName\", \"city\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"city\", \"placeholder\", \"Enter a City\"]],\n    template: function ManageProvidersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Provider Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, ManageProvidersComponent_mat_error_8_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementStart(13, \"mat-hint\", 7);\n        i0.ɵɵtext(14, \"If Provider is a physic person\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵtext(16, \"Email Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 8)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵtemplate(21, ManageProvidersComponent_mat_error_21_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 1);\n        i0.ɵɵtext(23, \"Phone Number Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-form-field\", 8)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 10);\n        i0.ɵɵelementStart(28, \"mat-icon\", 11);\n        i0.ɵɵtext(29, \"phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-hint\");\n        i0.ɵɵtext(31, \"Include area code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, ManageProvidersComponent_mat_error_32_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 1);\n        i0.ɵɵtext(34, \"Location Info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 2)(36, \"mat-form-field\", 3)(37, \"mat-label\");\n        i0.ɵɵtext(38, \"Select Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"input\", 12);\n        i0.ɵɵtemplate(40, ManageProvidersComponent_mat_error_40_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"mat-form-field\", 3)(42, \"mat-label\");\n        i0.ɵɵtext(43, \"Select State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 13);\n        i0.ɵɵtemplate(45, ManageProvidersComponent_mat_error_45_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 14);\n        i0.ɵɵtemplate(47, ManageProvidersComponent_mat_form_field_47_Template, 8, 2, \"mat-form-field\", 15);\n        i0.ɵɵtemplate(48, ManageProvidersComponent_mat_form_field_48_Template, 5, 1, \"mat-form-field\", 15);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(49, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ManageProvidersComponent_Template_button_click_49_listener() {\n          return ctx.onSubmit(ctx.providerForm.value);\n        });\n        i0.ɵɵtext(50);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.providerForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"name\"].invalid);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"phone\"].invalid);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"country\"].invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"state\"].invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.checkValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.edit ? \"Update Provider\" : \"Create Provider\", \" \");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i6.MatFormField, i6.MatLabel, i7.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i8.NgIf, i6.MatError, i6.MatHint, i9.MatIcon, i6.MatSuffix, i10.MatSelect, i11.MatOption, i8.NgForOf, i12.MatButton],\n    styles: [\".form[_ngcontent-%COMP%]{max-width:750px}.row-form[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap}.row-input[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}.row-input[_ngcontent-%COMP%]:last-of-type{margin-right:0}  .lastname{width:100%!important;text-align:center!important}.checkCity[_ngcontent-%COMP%]{margin:-5px 10px 0}.cityField[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-left:0;margin-bottom:5px}@media (min-width: 768px){.cityField[_ngcontent-%COMP%]{margin-left:15px;width:auto}}\"]\n  });\n  return ManageProvidersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
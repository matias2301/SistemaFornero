{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/manage-data.service\";\nimport * as i2 from \"../../../services/alerts.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../components/table/table.component\";\n\nconst _c0 = function () {\n  return [2, 4, 6];\n};\n\nfunction ListRepairsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-table\", 1);\n    i0.ɵɵlistener(\"sort\", function ListRepairsComponent_div_0_Template_app_table_sort_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.sortData($event);\n    })(\"rowActionAdd\", function ListRepairsComponent_div_0_Template_app_table_rowActionAdd_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.addRepair($event);\n    })(\"rowActionEdit\", function ListRepairsComponent_div_0_Template_app_table_rowActionEdit_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.editRepair($event);\n    })(\"rowActionDelete\", function ListRepairsComponent_div_0_Template_app_table_rowActionDelete_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.deleteRepair($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"tableData\", ctx_r0.repairsRows)(\"tableColumns\", ctx_r0.repairsColumns)(\"isFilterable\", true)(\"isPageable\", true)(\"paginationSizes\", i0.ɵɵpureFunction0(7, _c0))(\"defaultPageSize\", 4)(\"rowAction\", \"actions\");\n  }\n} // import { Repair } from '../../../interfaces/repair.interface';\n\n\nexport let ListRepairsComponent = /*#__PURE__*/(() => {\n  class ListRepairsComponent {\n    constructor(_manageDataService, _alertsService, router) {\n      this._manageDataService = _manageDataService;\n      this._alertsService = _alertsService;\n      this.router = router;\n      this.repairsRows = [];\n      this.loading = true;\n      this.newRepair = {\n        idRepair: '',\n        clientFirstName: '',\n        clientLastName: '',\n        clientEmail: '',\n        subject: '',\n        estDate: '',\n        state: '',\n        assigned: '',\n        taken: '',\n        observations: [],\n        createdAt: '',\n        updatedAt: ''\n      };\n    }\n\n    ngOnInit() {\n      this.initializeColumns();\n      this.getRepairs();\n    }\n\n    sortData(sortParameters) {\n      const keyName = sortParameters.active;\n\n      if (sortParameters.direction === 'asc') {\n        this.repairsRows = this.repairsRows.sort((a, b) => a[keyName].localeCompare(b[keyName]));\n      } else if (sortParameters.direction === 'desc') {\n        this.repairsRows = this.repairsRows.sort((a, b) => b[keyName].localeCompare(a[keyName]));\n      } else {\n        this.getRepairs();\n      }\n    }\n\n    addRepair() {\n      this.router.navigateByUrl('repairs/manage-repairs');\n    }\n\n    editRepair(repair) {\n      this.router.navigate(['repairs/manage-repairs', repair]);\n    }\n\n    deleteRepair(repair) {\n      this._manageDataService.deleteRecord('repairs', repair.idRepair).subscribe(res => {\n        if (res.success) {\n          this._alertsService.alertToast(res.msg, 'success');\n\n          this.repairsRows = this.repairsRows.filter(item => item.idRepair !== repair.idRepair);\n        }\n      }, err => {\n        let errorMsg = '';\n\n        if (err.error) {\n          errorMsg = err.error.msg;\n        } else {\n          errorMsg = 'Lo sentimos, ha ocurrido un error. Intentá nuevamente.';\n        }\n\n        this._alertsService.alertToast(errorMsg, 'error');\n      });\n    }\n\n    initializeColumns() {\n      this.repairsColumns = [{\n        name: 'Nombre cliente',\n        dataKey: 'clientFirstName',\n        position: 'left',\n        isSortable: true\n      }, {\n        name: 'Apellido cliente',\n        dataKey: 'clientLastName',\n        position: 'left',\n        isSortable: true\n      }, {\n        name: 'Motivo',\n        dataKey: 'subject',\n        position: 'left',\n        isSortable: false\n      }, {\n        name: 'Estado',\n        dataKey: 'state',\n        position: 'left',\n        isSortable: false\n      }, {\n        name: 'Asignado a',\n        dataKey: 'assigned',\n        position: 'left',\n        isSortable: false\n      }, {\n        name: 'Fecha ingreso',\n        dataKey: 'createdAt',\n        position: 'left',\n        isSortable: false\n      }];\n    }\n\n    getRepairs() {\n      this._manageDataService.getData('repairs').subscribe(res => {\n        console.log('repairs', res);\n\n        if (res.repairs.length > 0) {\n          res.repairs.map(repair => {\n            this.newRepair = {\n              idRepair: repair.id,\n              clientFirstName: repair.Client.firstName,\n              clientLastName: repair.Client.lastName,\n              clientEmail: repair.Client.email,\n              subject: repair.description,\n              estDate: repair.estDate,\n              state: repair.state,\n              assigned: repair.assigned.name,\n              taken: repair.taken.name,\n              observations: repair.Observations,\n              createdAt: repair.createdAt.split('T')[0].split('-').reverse().join('-'),\n              updatedAt: repair.updatedAt\n            };\n            this.repairsRows.push(this.newRepair);\n          });\n        }\n\n        this.loading = false;\n      });\n    }\n\n  }\n\n  ListRepairsComponent.ɵfac = function ListRepairsComponent_Factory(t) {\n    return new (t || ListRepairsComponent)(i0.ɵɵdirectiveInject(i1.ManageDataService), i0.ɵɵdirectiveInject(i2.AlertsService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  ListRepairsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListRepairsComponent,\n    selectors: [[\"app-list-repairs\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"tableData\", \"tableColumns\", \"isFilterable\", \"isPageable\", \"paginationSizes\", \"defaultPageSize\", \"rowAction\", \"sort\", \"rowActionAdd\", \"rowActionEdit\", \"rowActionDelete\"]],\n    template: function ListRepairsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ListRepairsComponent_div_0_Template, 2, 8, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    directives: [i4.NgIf, i5.TableComponent],\n    styles: [\"\"]\n  });\n  return ListRepairsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
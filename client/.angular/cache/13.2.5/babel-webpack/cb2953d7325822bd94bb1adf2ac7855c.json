{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/countries.service\";\nimport * as i3 from \"../../../services/getJson.service\";\nimport * as i4 from \"../../../services/manage-data.service\";\nimport * as i5 from \"../../../services/alerts.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/icon\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"@angular/material/checkbox\";\nimport * as i14 from \"@angular/material/button\";\n\nfunction ManageProvidersComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El email es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El n\\u00FAmero de tel\\u00E9fono es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_option_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵlistener(\"click\", function ManageProvidersComponent_mat_option_40_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const i_r10 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.setStates(i_r10);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const country_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", country_r9.CountryName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", country_r9.CountryName, \" \");\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" El pa\\u00EDs es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 19);\n    i0.ɵɵlistener(\"click\", function ManageProvidersComponent_mat_option_48_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const i_r14 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.setCities(i_r14);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const state_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r13.StateName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r13.StateName, \" \");\n  }\n}\n\nfunction ManageProvidersComponent_mat_error_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La provincia es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_51_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const city_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", city_r19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", city_r19, \" \");\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_51_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La ciudad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 3)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Seleccion\\u00E1 una ciudad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-select\", 20)(4, \"mat-option\");\n    i0.ɵɵtext(5, \"--\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ManageProvidersComponent_mat_form_field_51_mat_option_6_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ManageProvidersComponent_mat_form_field_51_mat_error_7_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.cities);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.providerForm.controls[\"city\"].invalid);\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_52_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" La ciudad es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerida\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction ManageProvidersComponent_mat_form_field_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 3)(1, \"mat-label\");\n    i0.ɵɵtext(2, \"Ciudad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 23);\n    i0.ɵɵtemplate(4, ManageProvidersComponent_mat_form_field_52_mat_error_4_Template, 4, 0, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.providerForm.controls[\"city\"].invalid);\n  }\n}\n\nexport let ManageProvidersComponent = /*#__PURE__*/(() => {\n  class ManageProvidersComponent {\n    constructor(formBuilder, _countriesService, _JSONLoaderHelper, _manageDataService, _alertsService, activatedRoute, router) {\n      this.formBuilder = formBuilder;\n      this._countriesService = _countriesService;\n      this._JSONLoaderHelper = _JSONLoaderHelper;\n      this._manageDataService = _manageDataService;\n      this._alertsService = _alertsService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.countries = [];\n      this.edit = false;\n      this.checkValue = false;\n      this.createForm();\n    }\n\n    ngOnInit() {\n      this.getCountries();\n      this.provider = this.activatedRoute.snapshot.params;\n\n      if (this.provider.id) {\n        this.edit = true;\n        this.loadForm();\n      }\n    }\n\n    createForm() {\n      this.providerForm = this.formBuilder.group({\n        name: new FormControl('', Validators.compose([Validators.required])),\n        lastName: new FormControl(''),\n        email: new FormControl('', Validators.compose([Validators.required, Validators.pattern(\"^[\\\\w]+(?:\\\\.[\\\\w])*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,6}$\"), Validators.maxLength(40)])),\n        phone: new FormControl('', Validators.compose([Validators.required])),\n        country: new FormControl('', Validators.compose([Validators.required])),\n        state: new FormControl('', Validators.compose([Validators.required])),\n        city: new FormControl('', Validators.compose([Validators.required]))\n      });\n    }\n\n    loadForm() {\n      this.providerForm.reset({\n        name: this.provider.name,\n        lastName: this.provider.lastName || '',\n        email: this.provider.email,\n        phone: this.provider.phone,\n        country: this.provider.country,\n        state: this.provider.state,\n        city: this.provider.city\n      });\n    }\n\n    getCountries() {\n      this._countriesService.allCountries().subscribe(res => {\n        this.countries = res.Countries;\n\n        if (!this.edit) {\n          this.providerForm.controls['country'].patchValue('Argentina');\n          this.setStates(9);\n        }\n      }, err => console.log(err));\n    }\n\n    setStates(i) {\n      if (i == 9) {\n        this._JSONLoaderHelper.get('provincias').then(data => {\n          this.states = data;\n\n          this._JSONLoaderHelper.get('localidades', '1').then(ciudades => {\n            this.cities = ciudades.map(ciudad => ciudad.Nombre);\n          });\n        });\n      } else {\n        this.states = this.countries[i].States;\n        this.cities = this.states[0].Cities;\n      }\n    }\n\n    setCities(i) {\n      if (this.providerForm.controls['country'].value == 'Argentina') {\n        this._JSONLoaderHelper.get('localidades', i + 1).then(ciudades => {\n          this.cities = ciudades.map(ciudad => ciudad.Nombre);\n        });\n      } else {\n        this.cities = this.states[i].Cities;\n      }\n    }\n\n    onSubmit(values) {\n      if (this.providerForm.invalid) {\n        Object.values(this.providerForm.controls).forEach(control => {\n          if (control instanceof FormGroup) {\n            Object.values(control.controls).forEach(control => control.markAsTouched());\n          } else {\n            control.markAsTouched();\n          }\n        });\n        return;\n      }\n\n      if (!this.edit) {\n        this.addProvider(values);\n      } else {\n        this.updateProvider(values);\n      }\n    }\n\n    addProvider(values) {\n      this._manageDataService.createRecord('providers', values).subscribe(res => {\n        if (res.success) {\n          this._alertsService.alertToast(res.msg, 'success').then(() => {\n            this.providerForm.reset();\n          });\n        } else {\n          this._alertsService.alertToast(res.msg, 'error');\n        }\n      }, err => {\n        let errorMsg = '';\n\n        if (err.error.msg) {\n          errorMsg = err.error.msg;\n        } else {\n          errorMsg = 'Lo sentimos, ha ocurrido un error. Intentá nuevamente.';\n        }\n\n        this._alertsService.alertToast(errorMsg, 'error');\n      });\n    }\n\n    updateProvider(values) {\n      this._manageDataService.updateRecord('providers', this.provider.id, values).subscribe(res => {\n        this._alertsService.alertToast('¡El provedor se agregó con éxito!', 'success').then(() => {\n          this.router.navigateByUrl('providers/list-providers');\n          this.providerForm.reset();\n          this.edit = false;\n        });\n      }, err => {\n        let errorMsg = '';\n\n        if (err.error.msg) {\n          errorMsg = err.error.msg;\n        } else {\n          errorMsg = 'Lo sentimos, ha ocurrido un error. Intentá nuevamente.';\n        }\n\n        this._alertsService.alertToast(errorMsg, 'error');\n      });\n    }\n\n  }\n\n  ManageProvidersComponent.ɵfac = function ManageProvidersComponent_Factory(t) {\n    return new (t || ManageProvidersComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CountriesService), i0.ɵɵdirectiveInject(i3.JSONLoaderHelper), i0.ɵɵdirectiveInject(i4.ManageDataService), i0.ɵɵdirectiveInject(i5.AlertsService), i0.ɵɵdirectiveInject(i6.ActivatedRoute), i0.ɵɵdirectiveInject(i6.Router));\n  };\n\n  ManageProvidersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageProvidersComponent,\n    selectors: [[\"app-manage-providers\"]],\n    decls: 57,\n    vars: 12,\n    consts: [[1, \"mat-elevation-z8\", \"form\", 3, \"formGroup\"], [1, \"text-divider\"], [1, \"row-form\"], [\"appearance\", \"outline\", 1, \"row-input\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"placeholder\", \"Ingres\\u00E1 el nombre\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"placeholder\", \"Ingres\\u00E1 el apellido\"], [1, \"lastname\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"email\", \"max\", \"40\", \"maxlength\", \"40\", \"formControlName\", \"email\", \"placeholder\", \"cliente@email.com\"], [\"matInput\", \"\", \"formControlName\", \"phone\", \"placeholder\", \"Ingres\\u00E1 un n\\u00FAmero de tel\\u00E9fono\"], [\"matSuffix\", \"\"], [\"formControlName\", \"country\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"state\"], [1, \"cityField\"], [\"appearance\", \"outline\", \"class\", \"row-input\", 4, \"ngIf\"], [1, \"checkCity\", 3, \"value\", \"change\"], [\"mat-raised-button\", \"\", \"type\", \"button\", \"color\", \"primary\", 1, \"btn-submit\", \"full-width\", 3, \"click\"], [3, \"value\", \"click\"], [\"formControlName\", \"city\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"matInput\", \"\", \"formControlName\", \"city\", \"placeholder\", \"Enter a City\"]],\n    template: function ManageProvidersComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Informaci\\u00F3n del provedor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, ManageProvidersComponent_mat_error_8_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Apellido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵelementStart(13, \"mat-hint\", 7);\n        i0.ɵɵtext(14, \"Si es una persona y no una raz\\u00F3n social\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵtext(16, \"Informaci\\u00F3n de contacto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 8)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵtemplate(21, ManageProvidersComponent_mat_error_21_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\", 8)(23, \"mat-label\");\n        i0.ɵɵtext(24, \"N\\u00FAmero de tel\\u00E9fono / celular\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 10);\n        i0.ɵɵelementStart(26, \"mat-icon\", 11);\n        i0.ɵɵtext(27, \"phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-hint\");\n        i0.ɵɵtext(29, \"Incluir c\\u00F3digo de \\u00E1rea\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, ManageProvidersComponent_mat_error_30_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 1);\n        i0.ɵɵtext(32, \"Pa\\u00EDs - Provincia - Ciudad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 2)(34, \"mat-form-field\", 3)(35, \"mat-label\");\n        i0.ɵɵtext(36, \"Pa\\u00EDs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-select\", 12)(38, \"mat-option\");\n        i0.ɵɵtext(39, \"--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, ManageProvidersComponent_mat_option_40_Template, 2, 2, \"mat-option\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(41, ManageProvidersComponent_mat_error_41_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"mat-form-field\", 3)(43, \"mat-label\");\n        i0.ɵɵtext(44, \"Provincia\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-select\", 14)(46, \"mat-option\");\n        i0.ɵɵtext(47, \"--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(48, ManageProvidersComponent_mat_option_48_Template, 2, 2, \"mat-option\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, ManageProvidersComponent_mat_error_49_Template, 4, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 15);\n        i0.ɵɵtemplate(51, ManageProvidersComponent_mat_form_field_51_Template, 8, 2, \"mat-form-field\", 16);\n        i0.ɵɵtemplate(52, ManageProvidersComponent_mat_form_field_52_Template, 5, 1, \"mat-form-field\", 16);\n        i0.ɵɵelementStart(53, \"mat-checkbox\", 17);\n        i0.ɵɵlistener(\"change\", function ManageProvidersComponent_Template_mat_checkbox_change_53_listener() {\n          return ctx.checkValue = !ctx.checkValue;\n        });\n        i0.ɵɵtext(54, \" No encuentro en la lista \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(55, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function ManageProvidersComponent_Template_button_click_55_listener() {\n          return ctx.onSubmit(ctx.providerForm.value);\n        });\n        i0.ɵɵtext(56);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.providerForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"name\"].invalid);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"email\"].invalid);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"phone\"].invalid);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"country\"].invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.states);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.providerForm.controls[\"state\"].invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.checkValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkValue);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.checkValue);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.edit ? \"Modificar provedor\" : \"Agregar provedor\", \" \");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.MatFormField, i7.MatLabel, i8.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i9.NgIf, i7.MatError, i7.MatHint, i1.MaxLengthValidator, i10.MatIcon, i7.MatSuffix, i11.MatSelect, i12.MatOption, i9.NgForOf, i13.MatCheckbox, i14.MatButton],\n    styles: [\".form[_ngcontent-%COMP%]{max-width:750px}.row-form[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap}.row-input[_ngcontent-%COMP%]{flex-grow:1;margin-right:15px}.row-input[_ngcontent-%COMP%]:last-of-type{margin-right:0}  .lastname{width:100%!important;text-align:center!important}.checkCity[_ngcontent-%COMP%]{margin:-5px 10px 0}.cityField[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin-left:0;margin-bottom:5px}@media (min-width: 768px){.cityField[_ngcontent-%COMP%]{margin-left:15px;width:auto}}\"]\n  });\n  return ManageProvidersComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}